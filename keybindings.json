[
  {
    "key": "cmd+p",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log($0);"
    }
  },
  {
    "key": "cmd+enter",
    "command": "macros.pythonExecSelectionAndCursorDown",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'rmd'",
    "args": {
      "snippet": "```{r}\n$0\n```"
    }
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'quarto'",
    "args": {
      "snippet": "```{r}\n$0\n```"
    }
  },
  {
    "description": "view object",
    "key": "cmd+u",
    "command": "r.runCommandWithSelectionOrWord",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')",
    "args": "cmd = gsub(\"\n\", \"\", \"$$\");if(endsWith(cmd, \"%>% \") | endsWith(cmd, \"%>%\")){eval(parse(text = paste0(cmd, \"View()\")))}else{eval(parse(text = paste0(cmd, \"%>% View()\")))}"
  },
  {
    "description": "help document",
    "key": "f1",
    "command": "r.runCommandWithSelectionOrWord",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')",
    "args": "?$$" // more reliable than help($$)
  },
  {
    "key": "cmd+p",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto' || editorLangId == 'r')",
    "args": {
      "snippet": " %>% "
    }
  },
  {
    "key": "cmd+i",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')",
    "args": {
      "snippet": " %in% c(\"$0\")"
    }
  },
  {
    "key": "ctrl+p",
    "command": "r.runCommand",
    "when": "editorTextFocus && editorLangId == 'rmd'",
    "args": ".vsc.browser(httpgd::hgd_url(), viewer = \"Active\")"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "shift+ctrl+up",
    "command": "cursorMove",
    "args": {
      "to": "up",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus"
  },
  {
    "key": "shift+ctrl+down",
    "command": "cursorMove",
    "args": {
      "to": "down",
      "by": "line",
      "value": 10
    },
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-r.runSourcewithEcho",
    "when": "editorTextFocus && editorLangId == 'r'"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+n",
    "command": "multicmd.r.go.next.chunk.center",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+n",
    "command": "multicmd.quarto.go.next.chunk.center",
    "when": "editorTextFocus && editorLangId == 'quarto'"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+b",
    "command": "multicmd.r.go.previous.chunk.center",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+b",
    "command": "multicmd.quarto.go.previous.chunk.center",
    "when": "editorTextFocus && editorLangId == 'quarto'"
  },
  {
    "key": "ctrl+s",
    "command": "r.selectCurrentChunk",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "ctrl+s",
    "command": "r.selectCurrentChunk",
    "when": "editorTextFocus && editorLangId == 'quarto'"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "shift+cmd+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "shift+cmd+s",
    "command": "-r.runSource",
    "when": "editorTextFocus && editorLangId == 'r'"
  },
  {
    "key": "shift+cmd+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+z",
    // "command": "center-editor-window.center",
    "when": "editorTextFocus || findWidgetVisible"
  },
  {
    "key": "ctrl+l",
    // "command": "-center-editor-window.center",
    "when": "editorTextFocus || findWidgetVisible"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+e",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'python'",
    "args": {
      "snippet": "browse({'obj': $0}, show_callable_attributes = True,show_special_attributes = False, reset = True)"
    }
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+enter",
    "command": "-r.runCurrentChunk",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')"
  },
  {
    "key": "shift+cmd+r",
    "command": "r.createRTerm",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')"
  },
  // Very useful keybinding to view the head of an obj
  {
    "description": "showhead",
    "key": "cmd+h",
    "command": "r.runCommandWithSelectionOrWord",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto' || editorLangId == 'qmd')",
    "args": "cmd = gsub(\"\n\", \"\", \"$$\");if(endsWith(cmd, \"%>% \") | endsWith(cmd, \"%>%\")){eval(parse(text = paste0(cmd, \"head(10)\")))}else{eval(parse(text = paste0(cmd, \"%>% head(10)\")))}" // Note: use quotation around $$ to change the selected command as string
  },
  // {
  //   "description": "showtail",
  //   "key": "cmd+u",
  //   "command": "r.runCommandWithSelectionOrWord",
  //   "when": "editorTextFocus && editorLangId == 'rmd'",
  //   "args": "tail($$)"
  // },
  {
    "description": "knit to pdf",
    "key": "shift+cmd+k",
    "command": "r.runCommandWithEditorPath",
    "when": "editorTextFocus && editorLangId == 'rmd'",
    "args": "rmarkdown::render(\"$$\", encoding = \"UTF-8\"); ABC_Name = strsplit(\"$$\", \".Rmd\")[[1]][1]; bash_command_r = paste0(\"open \", ABC_Name, \".pdf\"); system(bash_command_r, intern = TRUE, ignore.stderr = F, ignore.stdout = F)"
  },
  {
    "description": "render a python file into pdf",
    "key": "shift+cmd+k",
    "command": "terminalCommandKeys.run",
    "when": "editorTextFocus && editorLangId == 'python'",
    "args": {
      "cmd": "autoweave ${file}"
    }
  },
  {
    "key": "shift+cmd+o",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "shift+cmd+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-r.knitRmd",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+a",
    "command": "-cursorLineStart",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "multicmd.r.go.beginning.chunk.center",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')"
  },
  {
    "key": "ctrl+e",
    "command": "multicmd.r.go.end.chunk.center",
    "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "f2",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+[IntlBackslash]",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+1",
    "command": "multicmd.r.focus.editor.center"
  },
  {
    "key": "cmd+g",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+enter",
    "command": "multicmd.r.run.chunk.move.end",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "shift+cmd+n",
    "command": "multicmd.r.run.next.chunk.move.end",
    "when": "editorTextFocus && editorLangId == 'rmd'"
  },
  {
    "key": "shift+cmd+n",
    "command": "multicmd.quarto.run.next.chunk.move.end",
    "when": "editorTextFocus && editorLangId == 'quarto'"
  },
  {
    "key": "shift+cmd+b",
    "command": "multicmd.r.run.previous.chunk.center"
  },
  {
    "key": "shift+cmd+b",
    "command": "multicmd.quarto.run.previous.chunk.center"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+right",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+m",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+escape",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+=",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+-",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-jupyter.execSelectionInteractive",
    "when": "editorTextFocus && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "cmd+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+enter",
    "command": "-notebook.cell.insertCodeCellBelow",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+cmd+y",
    "command": "python.createTerminal"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "key": "shift+enter",
    "command": "jupyter.runAndDebugCell",
    "when": "notebookEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-jupyter.runAndDebugCell"
  },
  {
    "key": "ctrl+l",
    "command": "notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "alt+delete",
    "command": "-notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "-jupyter.runcurrentcelladvance",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "-notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "key": "down",
    "command": "notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "down",
    "command": "-notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "up",
    "command": "notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "up",
    "command": "-notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "ctrl+w ctrl+=",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "ctrl+w ctrl+-",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "-jupyter.runcurrentcelladvance",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+enter",
    "command": "-jupyter.execSelectionInteractive",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !jupyter.webExtension && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "ctrl+alt+]",
    "command": "-jupyter.gotoNextCellInFile",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+alt+[",
    "command": "-jupyter.gotoPrevCellInFile",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  // {
  //   "description": "help document python",
  //   "key": "f1",
  //   "command": "r.runCommandWithSelectionOrWord",
  //   "when": "editorTextFocus && (editorLangId == 'rmd' || editorLangId == 'quarto')",
  //   "args": "?$$" // more reliable than help($$)
  // },
  {
    "key": "shift+cmd+enter",
    "command": "multicmd.py.run.current.chunk.center",
    "when": "editorTextFocus && editorLangId == 'python' && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+cmd+n",
    "command": "multicmd.py.run.next.chunk.center",
    "when": "editorTextFocus && editorLangId == 'python' && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "cmd+enter",
    "command": "multicmd.py.run.current.line.move.down",
    "when": "editorTextFocus && editorLangId == 'python' && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "multicmd.py.run.current.line.no.move",
    "when": "editorTextFocus && editorLangId == 'python' && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "jupyter.expandallcells",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'"
  },
  {
    "key": "cmd+enter",
    "command": "-extension.executeAREPLBlock",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+a",
    "command": "multicmd.py.go.beginning.cell",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "ctrl+e",
    "command": "multicmd.py.go.end.cell",
    "when": "editorTextFocus && editorLangId == 'python'"
  },
  {
    "key": "f1",
    "command": "kite.docs-at-cursor",
    "when": "editorTextFocus && editorLangId == 'python'"
    // "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'"
  },
  {
    "key": "shift+cmd+i",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'python'",
    "args": {
      "snippet": "# %% name = \"\" \n$0"
    }
  },
  {
    "key": "cmd+p",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'python'",
    "args": {
      "snippet": "print($0)"
    }
  },
  {
    "key": "cmd+d",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus && editorLangId == 'python'",
    "args": {
      "snippet": "print(dir($0))"
    }
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "jupyter.selectCell",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'"
  },
  {
    "key": "ctrl+shift+alt+\\",
    "command": "-jupyter.selectCell",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+s",
    "command": "jupyter.selectCellContents",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'"
  },
  {
    "key": "ctrl+alt+\\",
    "command": "-jupyter.selectCellContents",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+j",
    "command": "selectby.regex1",
    "when": "editorTextFocus && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'"
  },
  {
    "key": "ctrl+b", // moveby to previous chunk and center
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        {
          "command": "cursorUp"
        },
        {
          "command": "moveby.regex",
          "args": {
            "regex": "# %% name",
            "properties": [
              "moveby", // index1: moveby
              "prev", // index2: previous
              "start" // index3: cursor move to the start
            ],
            "label": "move to previous chunk"
          }
        },
        {
          "command": "cursorDown"
        }
      ]
    }
  },
  {
    "key": "ctrl+n", // moveby to next chunk and center
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        {
          "command": "moveby.regex",
          "args": {
            "regex": "# %% name",
            "properties": [
              "moveby", // index1: moveby
              "next", // index2: previous
              "start" // index3: cursor move to the start
            ],
            "label": "move to next chunk"
          }
        },
        {
          "command": "cursorDown"
        }
      ]
    }
  },
  {
    "key": "shift+cmd+n", // run next chunk and center
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused && editorLangId == 'python'",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        {
          "command": "moveby.regex",
          "args": {
            "regex": "# %% name",
            "properties": [
              "moveby", // index1: moveby
              "next", // index2: previous
              "start" // index3: cursor move to the start
            ],
            "label": "move to next chunk"
          }
        },
        {
          "command": "cursorDown"
        },
        {
          "command": "jupyter.runcurrentcell"
        },
        {
          "command": "interactive.scrollToBottom"
        }
      ]
    }
  },
  {
    "key": "shift+cmd+r",
    "command": "-extension.newAREPLSession",
    "when": "!inQuickOpen && !terminalFocus"
  },
  {
    "key": "shift+cmd+u",
    "command": "quarto.editInSourceMode",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  },
  {
    "key": "shift+cmd+f4",
    "command": "-quarto.editInSourceMode",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  },
  {
    "key": "shift+cmd+u",
    "command": "quarto.editInVisualMode",
    "when": "editorLangId == 'markdown' && resourceScheme != 'untitled' || editorLangId == 'quarto' && resourceScheme != 'untitled'"
  },
  {
    "key": "shift+cmd+f4",
    "command": "-quarto.editInVisualMode",
    "when": "editorLangId == 'markdown' && resourceScheme != 'untitled' || editorLangId == 'quarto' && resourceScheme != 'untitled'"
  },
  {
    "key": "shift+cmd+n",
    "command": "quarto.runCellsBelow",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  },
  {
    "key": "shift+alt+cmd+n",
    "command": "-quarto.runCellsBelow",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  },
  {
    "key": "shift+cmd+b",
    "command": "quarto.runCellsAbove",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  },
  {
    "key": "shift+alt+cmd+p",
    "command": "-quarto.runCellsAbove",
    "when": "activeCustomEditorId == 'quarto.visualEditor'"
  }
]
